using UnityEngine;
using System.Collections.Generic;
using System.Collections;
using System.Linq;

public class InvulnerabilityBehaviour : BaseBehaviour
{
    [SerializeField] float invulnerabilityTime;
    [SerializeField] float flikerInterval = .05f;

    #region Events
    [SerializeField] UnityVoidEvent OnInvulnerabilityActive;
    [SerializeField] UnityVoidEvent OnInvulnerabilityInactive;
    #endregion

    List<SkinnedMeshRenderer> renderersToFlicker = new List<SkinnedMeshRenderer>();

    protected override void CustomSetup()
    {
        renderersToFlicker = GetComponentsInChildren<SkinnedMeshRenderer>().ToList();
    }

    /// <summary>
    /// Toggles the invulnerability
    /// </summary>
    /// <param name="_value"></param>
    public void ToggleInvulnerability(bool _value)
    {
        if (_value)
        {
            OnInvulnerabilityActive.Invoke();
            StartCoroutine(FlickerEffect());
        }
        else
        {
            OnInvulnerabilityInactive.Invoke();
            materialsOff = true;
            Flicker();
        }
    }

    IEnumerator FlickerEffect()
    {
        float invulTimer = 0;
        float flickerTimer = 0;
        materialsOff = false;

        while (invulTimer < invulnerabilityTime)
        {
            invulTimer += Time.deltaTime;
            flickerTimer += Time.deltaTime;

            if (flickerTimer >= flikerInterval)
            {
                Flicker();
                flickerTimer = 0;
            }

            yield return null;
        }

        ToggleInvulnerability(false);
    }

    bool materialsOff;
    void Flicker()
    {
        for (int i = 0; i < renderersToFlicker.Count; i++)
        {
            if (materialsOff)
                renderersToFlicker[i].enabled = true;
            else
                renderersToFlicker[i].enabled = false;
        }
        materialsOff = !materialsOff;
    }
}